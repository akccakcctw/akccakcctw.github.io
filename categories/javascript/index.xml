<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Javascript on 為了可能的聲音</title>
    <link>https://blog.rex-tsou.com/categories/javascript/</link>
    <description>Recent content in Javascript on 為了可能的聲音</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <copyright>© 2017 &lt;a href=&#34;https://github.com/akccakcctw&#34; target=&#34;_blank&#34;&gt;Rex Tsou&lt;/a&gt;</copyright>
    <lastBuildDate>Mon, 20 Nov 2017 00:08:12 +0800</lastBuildDate>
    
	<atom:link href="https://blog.rex-tsou.com/categories/javascript/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Event Loop in JavaScript</title>
      <link>https://blog.rex-tsou.com/2017/11/event-loop-in-javascript/</link>
      <pubDate>Mon, 20 Nov 2017 00:08:12 +0800</pubDate>
      
      <guid>https://blog.rex-tsou.com/2017/11/event-loop-in-javascript/</guid>
      <description>前兩天面試被問到對於 JavaScript Event Loop 的理解，覺得自己回答得不夠好，又去查了不少資料來補強，為加深印象，決定做個筆記。 JavaScript 是單執行緒（single thre</description>
    </item>
    
    <item>
      <title>思考 FizzBuzz</title>
      <link>https://blog.rex-tsou.com/2017/08/%E6%80%9D%E8%80%83-fizzbuzz/</link>
      <pubDate>Wed, 30 Aug 2017 19:47:26 +0800</pubDate>
      
      <guid>https://blog.rex-tsou.com/2017/08/%E6%80%9D%E8%80%83-fizzbuzz/</guid>
      <description>如果你沒看過 FizzBuzz，題目是這樣的： 給定一串從 1 到 n 的數字： a. 如果是 3 的倍數，就印出 &amp;ldquo;Fizz&amp;rdquo; b. 如果是 5 的倍數，就印出 &amp;ldquo;Buzz&amp;rdquo; c. 如果同時是 3 和 5 的</description>
    </item>
    
    <item>
      <title>分頁自動帶入 link-rel-prefetch function 試作</title>
      <link>https://blog.rex-tsou.com/2017/04/%E5%88%86%E9%A0%81%E8%87%AA%E5%8B%95%E5%B8%B6%E5%85%A5-link-rel-prefetch-function-%E8%A9%A6%E4%BD%9C/</link>
      <pubDate>Thu, 20 Apr 2017 07:34:00 +0000</pubDate>
      
      <guid>https://blog.rex-tsou.com/2017/04/%E5%88%86%E9%A0%81%E8%87%AA%E5%8B%95%E5%B8%B6%E5%85%A5-link-rel-prefetch-function-%E8%A9%A6%E4%BD%9C/</guid>
      <description>&amp;lt;nav class=&amp;quot;pages&amp;quot;&amp;gt; &amp;lt;ul class=&amp;quot;list&amp;quot;&amp;gt; &amp;lt;li class=&amp;quot;item&amp;quot;&amp;gt; &amp;lt;a class=&amp;quot;link&amp;quot; href=&amp;quot;/zh_TW&amp;quot;&amp;gt;首頁&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt; &amp;lt;li class=&amp;quot;item&amp;quot;&amp;gt; &amp;lt;a class=&amp;quot;link&amp;quot; href=&amp;qu</description>
    </item>
    
    <item>
      <title>JavaScript 轉換型別小技巧</title>
      <link>https://blog.rex-tsou.com/2017/03/javascript-%E8%BD%89%E6%8F%9B%E5%9E%8B%E5%88%A5%E5%B0%8F%E6%8A%80%E5%B7%A7/</link>
      <pubDate>Mon, 06 Mar 2017 09:47:00 +0000</pubDate>
      
      <guid>https://blog.rex-tsou.com/2017/03/javascript-%E8%BD%89%E6%8F%9B%E5%9E%8B%E5%88%A5%E5%B0%8F%E6%8A%80%E5%B7%A7/</guid>
      <description>var number = 1; var string = &#39;1&#39;; var bool = true; string === number; // false bool === number; // false bool === string; // false string 與 number 轉換 string === &#39;&#39; + number; // true +string === number; // true boolean 與 number 轉換 +bool === number; // true bool === !!number // true boolean 與string 轉換 bool</description>
    </item>
    
    <item>
      <title>Javascript 判斷小數是否相等</title>
      <link>https://blog.rex-tsou.com/2017/02/javascript-%E5%88%A4%E6%96%B7%E5%B0%8F%E6%95%B8%E6%98%AF%E5%90%A6%E7%9B%B8%E7%AD%89/</link>
      <pubDate>Wed, 08 Feb 2017 03:29:00 +0000</pubDate>
      
      <guid>https://blog.rex-tsou.com/2017/02/javascript-%E5%88%A4%E6%96%B7%E5%B0%8F%E6%95%B8%E6%98%AF%E5%90%A6%E7%9B%B8%E7%AD%89/</guid>
      <description>大家都知道，在 Javascript 裡，0.1 + 0.2 !== 0.3，因為浮點數並不是精確值。 那麼需要比較小數的時候怎麼辦呢？只要定義好誤差範圍即可，依據 IEEE 754 的標準，64</description>
    </item>
    
    <item>
      <title>FormData 基礎用法</title>
      <link>https://blog.rex-tsou.com/2017/01/formdata-%E5%9F%BA%E7%A4%8E%E7%94%A8%E6%B3%95/</link>
      <pubDate>Fri, 06 Jan 2017 02:53:00 +0000</pubDate>
      
      <guid>https://blog.rex-tsou.com/2017/01/formdata-%E5%9F%BA%E7%A4%8E%E7%94%A8%E6%B3%95/</guid>
      <description>創建 FormData 物件 // 語法： var formData = new FormData(form); // new 一個空的 FormData var formData = new FormData(); // 或者從現有的 form 取得資料，並 new FormData var formData = new FormData(document.querySelector(&#39;form&#39;)); 新增 (FormData.append) // 語法： formData.append(name, value[, filename]); // 新增一筆 username 資料，值為 Rex //</description>
    </item>
    
    <item>
      <title>用 POST 介接訂房系統 API 遇到的問題</title>
      <link>https://blog.rex-tsou.com/2016/12/%E7%94%A8-post-%E4%BB%8B%E6%8E%A5%E8%A8%82%E6%88%BF%E7%B3%BB%E7%B5%B1-api-%E9%81%87%E5%88%B0%E7%9A%84%E5%95%8F%E9%A1%8C/</link>
      <pubDate>Thu, 22 Dec 2016 08:02:00 +0000</pubDate>
      
      <guid>https://blog.rex-tsou.com/2016/12/%E7%94%A8-post-%E4%BB%8B%E6%8E%A5%E8%A8%82%E6%88%BF%E7%B3%BB%E7%B5%B1-api-%E9%81%87%E5%88%B0%E7%9A%84%E5%95%8F%E9%A1%8C/</guid>
      <description>最近製作某飯店集團網站，其中有個功能需要在網站內提供線上訂房的表單，當使用者選擇分館、入住日期、離開日期之後，按下快速訂房按鈕就直接查詢訂房</description>
    </item>
    
    <item>
      <title>如何實作 addClass, removeClass？</title>
      <link>https://blog.rex-tsou.com/2016/10/%E5%A6%82%E4%BD%95%E5%AF%A6%E4%BD%9C-addclass-removeclass/</link>
      <pubDate>Mon, 10 Oct 2016 09:46:00 +0000</pubDate>
      
      <guid>https://blog.rex-tsou.com/2016/10/%E5%A6%82%E4%BD%95%E5%AF%A6%E4%BD%9C-addclass-removeclass/</guid>
      <description>以下原始碼與想法，參考自 Sitepoint：Add or Remove a CSS Class with Vanilla JavaScript 並作改寫，為了撰寫方便，使用 ES6 語法，如需支援古老瀏覽器，仍需經過 Babel 轉換。 如</description>
    </item>
    
    <item>
      <title>Chrome Devtools 事件偵測的幾個技巧</title>
      <link>https://blog.rex-tsou.com/2016/07/chrome-devtools-%E4%BA%8B%E4%BB%B6%E5%81%B5%E6%B8%AC%E7%9A%84%E5%B9%BE%E5%80%8B%E6%8A%80%E5%B7%A7/</link>
      <pubDate>Tue, 26 Jul 2016 14:56:00 +0000</pubDate>
      
      <guid>https://blog.rex-tsou.com/2016/07/chrome-devtools-%E4%BA%8B%E4%BB%B6%E5%81%B5%E6%B8%AC%E7%9A%84%E5%B9%BE%E5%80%8B%E6%8A%80%E5%B7%A7/</guid>
      <description>不得不說，Chrome 開發者工具愈來越好用了，除了一般常用的 HTML、CSS 編輯功能之外，最近也常利用 sources tab，直接在瀏覽器開啟 js 檔抓 bug 測試</description>
    </item>
    
    <item>
      <title>利用URL.createObjectURL方法，即時產生可下載檔案</title>
      <link>https://blog.rex-tsou.com/2016/04/%E5%88%A9%E7%94%A8url.createobjecturl%E6%96%B9%E6%B3%95%E5%8D%B3%E6%99%82%E7%94%A2%E7%94%9F%E5%8F%AF%E4%B8%8B%E8%BC%89%E6%AA%94%E6%A1%88/</link>
      <pubDate>Tue, 19 Apr 2016 06:36:00 +0000</pubDate>
      
      <guid>https://blog.rex-tsou.com/2016/04/%E5%88%A9%E7%94%A8url.createobjecturl%E6%96%B9%E6%B3%95%E5%8D%B3%E6%99%82%E7%94%A2%E7%94%9F%E5%8F%AF%E4%B8%8B%E8%BC%89%E6%AA%94%E6%A1%88/</guid>
      <description>最近在看 HTML5 的一些 API，發現有不少好用的功能，剛才看到黑暗執行緒這篇介紹，可以利用URL.createObjectURL，將物件內容暫時存在</description>
    </item>
    
    <item>
      <title>利用WAAPI(Web Animations API)製作動態效果</title>
      <link>https://blog.rex-tsou.com/2016/03/%E5%88%A9%E7%94%A8waapiweb-animations-api%E8%A3%BD%E4%BD%9C%E5%8B%95%E6%85%8B%E6%95%88%E6%9E%9C/</link>
      <pubDate>Thu, 24 Mar 2016 10:46:00 +0000</pubDate>
      
      <guid>https://blog.rex-tsou.com/2016/03/%E5%88%A9%E7%94%A8waapiweb-animations-api%E8%A3%BD%E4%BD%9C%E5%8B%95%E6%85%8B%E6%95%88%E6%9E%9C/</guid>
      <description>一般來說，網頁動畫常使用 Javascript、CSS、SVG 等方式製作，尤其近期 SVG 動畫有越來越流行的趨勢，這些方法都各有優缺，WAAPI則企</description>
    </item>
    
    <item>
      <title>Javascript 字串轉陣列</title>
      <link>https://blog.rex-tsou.com/2016/03/javascript-%E5%AD%97%E4%B8%B2%E8%BD%89%E9%99%A3%E5%88%97/</link>
      <pubDate>Tue, 15 Mar 2016 10:47:00 +0000</pubDate>
      
      <guid>https://blog.rex-tsou.com/2016/03/javascript-%E5%AD%97%E4%B8%B2%E8%BD%89%E9%99%A3%E5%88%97/</guid>
      <description>如果要將字串轉為陣列形式，可以利用 for 迴圈，配合 slice 切割字串 請看程式碼： 利用 for 迴圈 首先是每隔一個字元存入陣列： var x = &amp;quot;Hello world!&amp;quot;; var myArray = []; function foo(x) { for (var i = 0;</description>
    </item>
    
    <item>
      <title>瀑布流（masonry）圖片重疊問題</title>
      <link>https://blog.rex-tsou.com/2016/02/%E7%80%91%E5%B8%83%E6%B5%81masonry%E5%9C%96%E7%89%87%E9%87%8D%E7%96%8A%E5%95%8F%E9%A1%8C/</link>
      <pubDate>Mon, 22 Feb 2016 09:25:00 +0000</pubDate>
      
      <guid>https://blog.rex-tsou.com/2016/02/%E7%80%91%E5%B8%83%E6%B5%81masonry%E5%9C%96%E7%89%87%E9%87%8D%E7%96%8A%E5%95%8F%E9%A1%8C/</guid>
      <description>因為 pinterest 的緣故，有不少網站喜歡使用瀑布流排版，其中最簡單好用的套件莫過於 masonry 了。 然而在網頁載入時，圖片下載比較慢，若在整個網頁載入完成之前圖片還</description>
    </item>
    
    <item>
      <title>各種讓網頁重新導向的方法</title>
      <link>https://blog.rex-tsou.com/2016/01/%E5%90%84%E7%A8%AE%E8%AE%93%E7%B6%B2%E9%A0%81%E9%87%8D%E6%96%B0%E5%B0%8E%E5%90%91%E7%9A%84%E6%96%B9%E6%B3%95/</link>
      <pubDate>Fri, 08 Jan 2016 15:50:00 +0000</pubDate>
      
      <guid>https://blog.rex-tsou.com/2016/01/%E5%90%84%E7%A8%AE%E8%AE%93%E7%B6%B2%E9%A0%81%E9%87%8D%E6%96%B0%E5%B0%8E%E5%90%91%E7%9A%84%E6%96%B9%E6%B3%95/</guid>
      <description>方法一：直接在錯誤頁裡重導 如果沒有強迫症不在乎伺服器裡多增加一個沒有用的檔案，這樣最簡單： PHP &amp;lt;?php header( &#39;Location: http://www.redirect-location.com&#39; ); exit(); ?&amp;gt; HTML &amp;lt;meta http-equiv=&amp;quot;refresh&amp;quot; content=&amp;quot;1;url=http://www.redirect-location.com&amp;quot;&amp;gt; 此處content屬性裡面</description>
    </item>
    
    <item>
      <title>動態改變 CSS 樣式的 inline 寫法</title>
      <link>https://blog.rex-tsou.com/2015/10/%E5%8B%95%E6%85%8B%E6%94%B9%E8%AE%8A-css-%E6%A8%A3%E5%BC%8F%E7%9A%84-inline-%E5%AF%AB%E6%B3%95/</link>
      <pubDate>Tue, 20 Oct 2015 16:10:00 +0000</pubDate>
      
      <guid>https://blog.rex-tsou.com/2015/10/%E5%8B%95%E6%85%8B%E6%94%B9%E8%AE%8A-css-%E6%A8%A3%E5%BC%8F%E7%9A%84-inline-%E5%AF%AB%E6%B3%95/</guid>
      <description>某些 CSS 樣式無法使用 inline 寫法表示，必須要寫在&amp;lt;style&amp;gt;標籤裡面。比如說，我們想要改變某個連結的hover樣式，就只能去修改 sty</description>
    </item>
    
  </channel>
</rss>