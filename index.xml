<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>為了可能的聲音</title>
    <link>https://blog.rex-tsou.com/</link>
    <description>Recent content on 為了可能的聲音</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Tue, 15 Oct 2019 13:30:13 +0800</lastBuildDate>
    
	<atom:link href="https://blog.rex-tsou.com/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>npx: Is Website Vulnerable?</title>
      <link>https://blog.rex-tsou.com/2019/10/npx-is-website-vulnerable/</link>
      <pubDate>Tue, 15 Oct 2019 13:30:13 +0800</pubDate>
      
      <guid>https://blog.rex-tsou.com/2019/10/npx-is-website-vulnerable/</guid>
      <description>is-website-vulnerable 可以用來檢測網站是否有已知的 JavaScript 第三方套件漏洞，用法非常簡單，只要使用 npx 就可以直接執行： npx is-website-vulnerable http://www.example.com （credit: 官方 GitHub） 參考資料 GitHub Repo</description>
    </item>
    
    <item>
      <title>增加 SSH 登入安全性（二）</title>
      <link>https://blog.rex-tsou.com/2019/06/%E5%A2%9E%E5%8A%A0-ssh-%E7%99%BB%E5%85%A5%E5%AE%89%E5%85%A8%E6%80%A7%E4%BA%8C/</link>
      <pubDate>Sun, 23 Jun 2019 11:50:08 +0800</pubDate>
      
      <guid>https://blog.rex-tsou.com/2019/06/%E5%A2%9E%E5%8A%A0-ssh-%E7%99%BB%E5%85%A5%E5%AE%89%E5%85%A8%E6%80%A7%E4%BA%8C/</guid>
      <description>延續上篇，除了調整 sshd_config 設定以提高安全性外，還有個常用的工具 fail2ban。 本文介紹的 fail2ban 是 v0.9.7，請注意不同版本的設定方式可能會稍有不同</description>
    </item>
    
    <item>
      <title>JavaScript ES6 Numeric Literals</title>
      <link>https://blog.rex-tsou.com/2019/04/javascript-es6-numeric-literals/</link>
      <pubDate>Sat, 06 Apr 2019 15:58:09 +0800</pubDate>
      
      <guid>https://blog.rex-tsou.com/2019/04/javascript-es6-numeric-literals/</guid>
      <description>寫 JS 也好一陣子了，還沒遇過需要處理二進位的情況，如果了解原理，用二進位表示法來處理權限問題，也真的是簡潔不囉唆。剛才翻了下文件，發現其實在 ES6</description>
    </item>
    
    <item>
      <title>增加 SSH 登入安全性</title>
      <link>https://blog.rex-tsou.com/2019/03/%E5%A2%9E%E5%8A%A0-ssh-%E7%99%BB%E5%85%A5%E5%AE%89%E5%85%A8%E6%80%A7/</link>
      <pubDate>Sun, 10 Mar 2019 22:51:10 +0800</pubDate>
      
      <guid>https://blog.rex-tsou.com/2019/03/%E5%A2%9E%E5%8A%A0-ssh-%E7%99%BB%E5%85%A5%E5%AE%89%E5%85%A8%E6%80%A7/</guid>
      <description>因為之前太懶，server 開好後就沒有特別去調 ssh 的設定，所以預設是走帳號密碼登入。今天突然感覺對了（什麼感覺），想來設定一下 server 的 ssh 登入，順便</description>
    </item>
    
    <item>
      <title>Bash Built in Variables</title>
      <link>https://blog.rex-tsou.com/2019/03/bash-built-in-variables/</link>
      <pubDate>Fri, 01 Mar 2019 15:13:38 +0800</pubDate>
      
      <guid>https://blog.rex-tsou.com/2019/03/bash-built-in-variables/</guid>
      <description>shell script 對我來說是個「目的性」很強的語言，雖然每天都要使用，但直接在指令列使用和寫成 xxx.sh 總感覺不是同一件事（而且我其實用的是 zsh）。由於缺乏系統</description>
    </item>
    
    <item>
      <title>兩則瀏覽器的新聞</title>
      <link>https://blog.rex-tsou.com/2018/12/%E5%85%A9%E5%89%87%E7%80%8F%E8%A6%BD%E5%99%A8%E7%9A%84%E6%96%B0%E8%81%9E/</link>
      <pubDate>Wed, 05 Dec 2018 00:45:05 +0800</pubDate>
      
      <guid>https://blog.rex-tsou.com/2018/12/%E5%85%A9%E5%89%87%E7%80%8F%E8%A6%BD%E5%99%A8%E7%9A%84%E6%96%B0%E8%81%9E/</guid>
      <description>今天看到了兩則關於瀏覽器的新聞，並陳如下： 一則是傳聞 Microsoft 打算在 Win10 發表一款新瀏覽器 Anaheim，但是將以 Chromium 替代目前持續開發的 EdgeHTML 核心。 另一則是關</description>
    </item>
    
    <item>
      <title>台灣常用 DNS server 整理</title>
      <link>https://blog.rex-tsou.com/2018/11/%E5%8F%B0%E7%81%A3%E5%B8%B8%E7%94%A8-dns-server-%E6%95%B4%E7%90%86/</link>
      <pubDate>Thu, 22 Nov 2018 00:40:09 +0800</pubDate>
      
      <guid>https://blog.rex-tsou.com/2018/11/%E5%8F%B0%E7%81%A3%E5%B8%B8%E7%94%A8-dns-server-%E6%95%B4%E7%90%86/</guid>
      <description>提供者 DNS (IPv4) DNS (IPV6) Google Public DNS 8.8.8.8 8.8.4.4 2001:4860:4860::8888 2001:4860:4860::8844 Cloudflare 1.1.1.1 1.0.0.1 2606:4700:4700::1111 2606:4700:4700::1001 OpenDNS (Cisco) 208.67.222.222 208.67.220.220 2620:0:ccc::2 2620:0:ccd::2 OpenDNS Family Shield 208.67.222.123 208.67.220.123 Comodo Secure DNS 8.26.56.26 8.20.247.20 Quad9 DNS (IBM) 9.9.9.9 149.112.112.112 2620:fe::fe 2620:fe::9 Hinet（中華電信） 168.95.1.1 169.95.192.1 2001:b000:168::1 2001:b000:168::2 SeedNet（遠傳電信）</description>
    </item>
    
    <item>
      <title>用 vimdiff 解 git 衝突</title>
      <link>https://blog.rex-tsou.com/2018/11/%E7%94%A8-vimdiff-%E8%A7%A3-git-%E8%A1%9D%E7%AA%81/</link>
      <pubDate>Tue, 13 Nov 2018 23:09:15 +0800</pubDate>
      
      <guid>https://blog.rex-tsou.com/2018/11/%E7%94%A8-vimdiff-%E8%A7%A3-git-%E8%A1%9D%E7%AA%81/</guid>
      <description>設定 mergetool 首先要將 git 的 mergetool 設定為 vimdiff，可以下指令： git config --global merge.tool vimdiff 或者直接修改 gitconfig，在最後面加上： [merge] tool = vimdiff 這樣設定就算完成了。 使</description>
    </item>
    
    <item>
      <title>window.open() 用法筆記</title>
      <link>https://blog.rex-tsou.com/2018/08/window.open-%E7%94%A8%E6%B3%95%E7%AD%86%E8%A8%98/</link>
      <pubDate>Mon, 27 Aug 2018 23:20:42 +0800</pubDate>
      
      <guid>https://blog.rex-tsou.com/2018/08/window.open-%E7%94%A8%E6%B3%95%E7%AD%86%E8%A8%98/</guid>
      <description>window.open() 這個 method 經常使用，但是之前並沒有深究，直到最近讀犀牛書，才發現還有些特別的用法。 先來看看 syntax： Syntax var w = window.open(url, windowName, [windowFeatures]); 參數：url 第一個參數就</description>
    </item>
    
    <item>
      <title>在 Vim 裡面使用 shell command</title>
      <link>https://blog.rex-tsou.com/2018/08/%E5%9C%A8-vim-%E8%A3%A1%E9%9D%A2%E4%BD%BF%E7%94%A8-shell-command/</link>
      <pubDate>Thu, 23 Aug 2018 11:44:31 +0800</pubDate>
      
      <guid>https://blog.rex-tsou.com/2018/08/%E5%9C%A8-vim-%E8%A3%A1%E9%9D%A2%E4%BD%BF%E7%94%A8-shell-command/</guid>
      <description>在 Vim 裡面驚嘆號指令挺常用的，可以在不離開 Vim 的狀態下執行 shell 指令，這也是 Vim 相對於其他編輯器最大的優勢。 語法為 :!{command}。 :!date &amp;quot; 取得今天</description>
    </item>
    
    <item>
      <title>Spotlight 找不到程式</title>
      <link>https://blog.rex-tsou.com/2018/07/spotlight-%E6%89%BE%E4%B8%8D%E5%88%B0%E7%A8%8B%E5%BC%8F/</link>
      <pubDate>Sat, 07 Jul 2018 10:05:34 +0800</pubDate>
      
      <guid>https://blog.rex-tsou.com/2018/07/spotlight-%E6%89%BE%E4%B8%8D%E5%88%B0%E7%A8%8B%E5%BC%8F/</guid>
      <description>因為可以綁快速鍵，一直以來我都是以 Spotlight 開啟 iTerm，但是今天更新之後，在 Spotlight 搜尋卻怎麼樣都找不到 iTerm，簡直就是災難！（有沒有這麼誇張） 找</description>
    </item>
    
    <item>
      <title>解析網址就用 a 吧</title>
      <link>https://blog.rex-tsou.com/2018/06/%E8%A7%A3%E6%9E%90%E7%B6%B2%E5%9D%80%E5%B0%B1%E7%94%A8-a-%E5%90%A7/</link>
      <pubDate>Wed, 20 Jun 2018 20:40:12 +0800</pubDate>
      
      <guid>https://blog.rex-tsou.com/2018/06/%E8%A7%A3%E6%9E%90%E7%B6%B2%E5%9D%80%E5%B0%B1%E7%94%A8-a-%E5%90%A7/</guid>
      <description>遇到要解析網址的時候，例如這樣一段網址： &#39;http://example.com:8000/pathname/?query=text#hash&#39;; 如果要取出其中的 protocol, hostname, pathname……你第一個想到的解法是什麼？ 別懷疑，我首先想到的就是用 Regular Expression 硬</description>
    </item>
    
    <item>
      <title>DevTools: Retrieving objects which were created from the constructor</title>
      <link>https://blog.rex-tsou.com/2018/06/devtools-retrieving-objects-which-were-created-from-the-constructor/</link>
      <pubDate>Sat, 16 Jun 2018 00:32:19 +0800</pubDate>
      
      <guid>https://blog.rex-tsou.com/2018/06/devtools-retrieving-objects-which-were-created-from-the-constructor/</guid>
      <description>Chrome 的 DevTools 原先就內建很多實用的 Command Line API，現在又多一個好用的 queryObjects(Constructor)，ummar 照慣例錄了一段 .gif ，附在</description>
    </item>
    
    <item>
      <title>ES2018：RegExp 新功能介紹</title>
      <link>https://blog.rex-tsou.com/2018/05/es2018regexp-%E6%96%B0%E5%8A%9F%E8%83%BD%E4%BB%8B%E7%B4%B9/</link>
      <pubDate>Tue, 22 May 2018 22:52:20 +0800</pubDate>
      
      <guid>https://blog.rex-tsou.com/2018/05/es2018regexp-%E6%96%B0%E5%8A%9F%E8%83%BD%E4%BB%8B%E7%B4%B9/</guid>
      <description>/s flag 為了解決目前的 dot(.) 無法比對到換行字元，因此新的 /s flag 又稱 dotAll mode。 const input = ` Lorem ipsum dolor sit amet, consectetur adipiscing hello world elit. Nam sit amet elit id risus aliquam porta. `; /hello.world/u.test(input); // false workarounds: /hello[\s\S]world/u.test(input); // true /hello[^]world/u.test(input) // true 新語法</description>
    </item>
    
    <item>
      <title>Bash/Zsh 環境變數載入順序</title>
      <link>https://blog.rex-tsou.com/2018/05/bash/zsh-%E7%92%B0%E5%A2%83%E8%AE%8A%E6%95%B8%E8%BC%89%E5%85%A5%E9%A0%86%E5%BA%8F/</link>
      <pubDate>Sat, 12 May 2018 11:56:05 +0800</pubDate>
      
      <guid>https://blog.rex-tsou.com/2018/05/bash/zsh-%E7%92%B0%E5%A2%83%E8%AE%8A%E6%95%B8%E8%BC%89%E5%85%A5%E9%A0%86%E5%BA%8F/</guid>
      <description>login 與 non-login 為什麼要先談這個？因為 login shell 與 non-login shell，載入的檔案不同，這邊參照鳥哥的說明： login shell：取得 bash 時需要完整的登入流程的，就稱為 login sh</description>
    </item>
    
    <item>
      <title>Checkout GitHub/Gitlab Pull Request Locally</title>
      <link>https://blog.rex-tsou.com/2018/04/checkout-github/gitlab-pull-request-locally/</link>
      <pubDate>Mon, 02 Apr 2018 17:45:39 +0800</pubDate>
      
      <guid>https://blog.rex-tsou.com/2018/04/checkout-github/gitlab-pull-request-locally/</guid>
      <description>專案目錄底下的 .git/config 檔案內，記錄有 Git 的 remote url，如果是 GitHub，長相類似這樣： [remote &amp;quot;origin&amp;quot;] url = git@github.com:akccakcctw/project.git fetch = +refs/heads/*:refs/remotes/origin/* 只要在下面新增一行 fetch = +refs/pull/*</description>
    </item>
    
    <item>
      <title>在 macOS 上安裝 Docker</title>
      <link>https://blog.rex-tsou.com/2018/03/%E5%9C%A8-macos-%E4%B8%8A%E5%AE%89%E8%A3%9D-docker/</link>
      <pubDate>Sat, 10 Mar 2018 15:49:48 +0800</pubDate>
      
      <guid>https://blog.rex-tsou.com/2018/03/%E5%9C%A8-macos-%E4%B8%8A%E5%AE%89%E8%A3%9D-docker/</guid>
      <description>Option 1： 使用官網提供的安裝包 在官網可以直接下載 Stable 或 Edge 版的 Docker.dmg 安裝，新的安裝包會安裝「Docker for Mac」，裡面包含 Docker Engine、Docker</description>
    </item>
    
    <item>
      <title>Vim 如何在 insert mode 換行</title>
      <link>https://blog.rex-tsou.com/2018/03/vim-%E5%A6%82%E4%BD%95%E5%9C%A8-insert-mode-%E6%8F%9B%E8%A1%8C/</link>
      <pubDate>Thu, 08 Mar 2018 23:19:33 +0800</pubDate>
      
      <guid>https://blog.rex-tsou.com/2018/03/vim-%E5%A6%82%E4%BD%95%E5%9C%A8-insert-mode-%E6%8F%9B%E8%A1%8C/</guid>
      <description>使用 Vim 好一陣子了，但一直有個地方覺得不順，就是在打到要換行的時候，需要先按 &amp;lt;Esc&amp;gt; 回到 Normal mode 再按 o。儘管可以用 &amp;lt;C-[&amp;gt; 代替 Esc，右手還是有按錯的可能性，</description>
    </item>
    
    <item>
      <title>更新 Homebrew 後，啟動 vim 的問題</title>
      <link>https://blog.rex-tsou.com/2018/01/%E6%9B%B4%E6%96%B0-homebrew-%E5%BE%8C%E5%95%9F%E5%8B%95-vim-%E7%9A%84%E5%95%8F%E9%A1%8C/</link>
      <pubDate>Thu, 25 Jan 2018 11:11:11 +0800</pubDate>
      
      <guid>https://blog.rex-tsou.com/2018/01/%E6%9B%B4%E6%96%B0-homebrew-%E5%BE%8C%E5%95%9F%E5%8B%95-vim-%E7%9A%84%E5%95%8F%E9%A1%8C/</guid>
      <description>今天更新 Homebrew 之後，啟動 vim 時顯示錯誤： dyld: Library not loaded: /usr/local/opt/ruby/lib/libruby.2.4.3.dylib Referenced from: /usr/local/bin/vim Reason: image not found [1] 52248 abort vim 找到類似問題，原因是 vim 依賴舊版的 ruby，所以更新後無法啟動，解決方法是重</description>
    </item>
    
    <item>
      <title>Linux command-line: find 指令用法</title>
      <link>https://blog.rex-tsou.com/2018/01/linux-command-line-find-%E6%8C%87%E4%BB%A4%E7%94%A8%E6%B3%95/</link>
      <pubDate>Sat, 20 Jan 2018 17:32:21 +0800</pubDate>
      
      <guid>https://blog.rex-tsou.com/2018/01/linux-command-line-find-%E6%8C%87%E4%BB%A4%E7%94%A8%E6%B3%95/</guid>
      <description>常用參數 type f: file d: directory l: symbolic p: pipe s: socket name iname: ignore case path mtime: modify time (day) atime: access time (day) ctime: create time (day) mmin: (minute) amin: (minute) cmin: (minute) size or: 可以簡寫為 -o not: 可以簡寫為 ! exec: execute delete 基本用法 # name find . -name findme # 找 &#39;findme&#39; find</description>
    </item>
    
    <item>
      <title>Arch Linux：Surface Pro 4 安裝筆記</title>
      <link>https://blog.rex-tsou.com/2017/12/arch-linuxsurface-pro-4-%E5%AE%89%E8%A3%9D%E7%AD%86%E8%A8%98/</link>
      <pubDate>Sun, 31 Dec 2017 01:37:20 +0800</pubDate>
      
      <guid>https://blog.rex-tsou.com/2017/12/arch-linuxsurface-pro-4-%E5%AE%89%E8%A3%9D%E7%AD%86%E8%A8%98/</guid>
      <description>八月多買了 Surface Pro 4 之後，就想著要灌 Linux 方便寫程式，但是擔心硬體支援度（觸控螢幕、雙鏡頭、鍵盤保護蓋、手寫筆……）還有保固，一些有的沒有的問題，所</description>
    </item>
    
    <item>
      <title>Arch Linux：環境設定與常用套件</title>
      <link>https://blog.rex-tsou.com/2017/12/arch-linux%E7%92%B0%E5%A2%83%E8%A8%AD%E5%AE%9A%E8%88%87%E5%B8%B8%E7%94%A8%E5%A5%97%E4%BB%B6/</link>
      <pubDate>Tue, 12 Dec 2017 11:40:55 +0800</pubDate>
      
      <guid>https://blog.rex-tsou.com/2017/12/arch-linux%E7%92%B0%E5%A2%83%E8%A8%AD%E5%AE%9A%E8%88%87%E5%B8%B8%E7%94%A8%E5%A5%97%E4%BB%B6/</guid>
      <description>GNOME 桌面設定 匯出與匯入設定檔 # 匯出 dconf dump / &amp;gt;~/.config/dconf/user.conf # 匯入 dconf load / &amp;lt;~/.config/dconf/user.conf 中文輸入法以及中文環境 安裝 fcitx（注音） fcitx 相關說明維基寫得很清楚，建議看一下。 # fcitx-im</description>
    </item>
    
    <item>
      <title>Arch Linux：套件管理工具 pacman</title>
      <link>https://blog.rex-tsou.com/2017/12/arch-linux%E5%A5%97%E4%BB%B6%E7%AE%A1%E7%90%86%E5%B7%A5%E5%85%B7-pacman/</link>
      <pubDate>Sat, 09 Dec 2017 23:51:08 +0800</pubDate>
      
      <guid>https://blog.rex-tsou.com/2017/12/arch-linux%E5%A5%97%E4%BB%B6%E7%AE%A1%E7%90%86%E5%B7%A5%E5%85%B7-pacman/</guid>
      <description>The pacman package manager is one of the major distinguishing features of Arch Linux. It combines a simple binary package format with an easy-to-use build system. The goal of pacman is to make it possible to easily manage packages, whether they are from the official repositories or the user&amp;rsquo;s own builds. 簡單來說，pacman 類似 Ubuntu 的 apt 或者 CentOS</description>
    </item>
    
    <item>
      <title>Arch Linux：安裝筆記</title>
      <link>https://blog.rex-tsou.com/2017/12/arch-linux%E5%AE%89%E8%A3%9D%E7%AD%86%E8%A8%98/</link>
      <pubDate>Sun, 03 Dec 2017 11:34:20 +0800</pubDate>
      
      <guid>https://blog.rex-tsou.com/2017/12/arch-linux%E5%AE%89%E8%A3%9D%E7%AD%86%E8%A8%98/</guid>
      <description>本文使用 BIOS + GPT 開機。如果開機方式不同的話，有些地方會不完全適用，要特別注意。 準備開機碟 先到官網下載 .iso 檔，Arch 映像檔由於只包含基礎需求，大</description>
    </item>
    
    <item>
      <title>用 AVA 作單元測試遇到的坑</title>
      <link>https://blog.rex-tsou.com/2017/11/%E7%94%A8-ava-%E4%BD%9C%E5%96%AE%E5%85%83%E6%B8%AC%E8%A9%A6%E9%81%87%E5%88%B0%E7%9A%84%E5%9D%91/</link>
      <pubDate>Fri, 24 Nov 2017 21:53:12 +0800</pubDate>
      
      <guid>https://blog.rex-tsou.com/2017/11/%E7%94%A8-ava-%E4%BD%9C%E5%96%AE%E5%85%83%E6%B8%AC%E8%A9%A6%E9%81%87%E5%88%B0%E7%9A%84%E5%9D%91/</guid>
      <description>最近在開發的 Lightbox 套件 Darkli 功能越來越完善了，所以就想說來幫它寫些測試吧。上網查現在比較紅的框架有哪些，發現還滿多的，除了主流的 Mocha，還有 Facebook 主</description>
    </item>
    
    <item>
      <title>Event Loop in JavaScript</title>
      <link>https://blog.rex-tsou.com/2017/11/event-loop-in-javascript/</link>
      <pubDate>Mon, 20 Nov 2017 00:08:12 +0800</pubDate>
      
      <guid>https://blog.rex-tsou.com/2017/11/event-loop-in-javascript/</guid>
      <description>前兩天面試被問到對於 JavaScript Event Loop 的理解，覺得自己回答得不夠好，又去查了不少資料來補強，為加深印象，決定做個筆記。 JavaScript 是單執行緒（single thre</description>
    </item>
    
    <item>
      <title>VSCode 實用套件： REST Client</title>
      <link>https://blog.rex-tsou.com/2017/10/vscode-%E5%AF%A6%E7%94%A8%E5%A5%97%E4%BB%B6-rest-client/</link>
      <pubDate>Thu, 19 Oct 2017 12:56:26 +0800</pubDate>
      
      <guid>https://blog.rex-tsou.com/2017/10/vscode-%E5%AF%A6%E7%94%A8%E5%A5%97%E4%BB%B6-rest-client/</guid>
      <description>REST Client: 官方載點 REST Client: Github 專案 不多說，先直接上圖感受一下： 簡介 REST Client allows you to send HTTP request and view the response in Visual Studio Code directly. REST Client 這個套件可以讓 VSCode 擁有像 Postman 一樣，對 server 發送GET、P</description>
    </item>
    
    <item>
      <title>利用 SSH Tunnel 做跳板（aka. 翻牆）</title>
      <link>https://blog.rex-tsou.com/2017/10/%E5%88%A9%E7%94%A8-ssh-tunnel-%E5%81%9A%E8%B7%B3%E6%9D%BFaka.-%E7%BF%BB%E7%89%86/</link>
      <pubDate>Wed, 11 Oct 2017 00:29:24 +0800</pubDate>
      
      <guid>https://blog.rex-tsou.com/2017/10/%E5%88%A9%E7%94%A8-ssh-tunnel-%E5%81%9A%E8%B7%B3%E6%9D%BFaka.-%E7%BF%BB%E7%89%86/</guid>
      <description>SSH參數說明： -N : 不執行任何指令 -f : 在背景執行 -L : 將 local port 轉向 -R : 將 remote port 轉向 -D : socks proxy 建立 SSH tunnel（正向） # syntax: ssh -L local_port:remote_address:remote_port username@server.com # 經過 ssh://localhost:2323 的連線，會</description>
    </item>
    
    <item>
      <title>算法複雜度筆記</title>
      <link>https://blog.rex-tsou.com/2017/09/%E7%AE%97%E6%B3%95%E8%A4%87%E9%9B%9C%E5%BA%A6%E7%AD%86%E8%A8%98/</link>
      <pubDate>Tue, 26 Sep 2017 11:10:26 +0800</pubDate>
      
      <guid>https://blog.rex-tsou.com/2017/09/%E7%AE%97%E6%B3%95%E8%A4%87%E9%9B%9C%E5%BA%A6%E7%AD%86%E8%A8%98/</guid>
      <description>.MJXc-display{ display: inline-block; margin: 0; padding: 0 .5em; } 資源 時間：需要經過多少步演算才能解決問題 空間：解決問題時需要多少記憶體 時間和空間是最重要的兩項資源。 以時間 T 為例，如果輸入</description>
    </item>
    
    <item>
      <title>思考 FizzBuzz</title>
      <link>https://blog.rex-tsou.com/2017/08/%E6%80%9D%E8%80%83-fizzbuzz/</link>
      <pubDate>Wed, 30 Aug 2017 19:47:26 +0800</pubDate>
      
      <guid>https://blog.rex-tsou.com/2017/08/%E6%80%9D%E8%80%83-fizzbuzz/</guid>
      <description>如果你沒看過 FizzBuzz，題目是這樣的： 給定一串從 1 到 n 的數字： a. 如果是 3 的倍數，就印出 &amp;ldquo;Fizz&amp;rdquo; b. 如果是 5 的倍數，就印出 &amp;ldquo;Buzz&amp;rdquo; c. 如果同時是 3 和 5 的</description>
    </item>
    
    <item>
      <title>創用CC授權是什麼鬼？</title>
      <link>https://blog.rex-tsou.com/2017/08/%E5%89%B5%E7%94%A8cc%E6%8E%88%E6%AC%8A%E6%98%AF%E4%BB%80%E9%BA%BC%E9%AC%BC/</link>
      <pubDate>Wed, 23 Aug 2017 17:50:00 +0800</pubDate>
      
      <guid>https://blog.rex-tsou.com/2017/08/%E5%89%B5%E7%94%A8cc%E6%8E%88%E6%AC%8A%E6%98%AF%E4%BB%80%E9%BA%BC%E9%AC%BC/</guid>
      <description>（CC授權示意圖，圖為 CC BY-NC-ND） 瀏覽新聞網站或是部落格，經常可以看到圖片底下除了圖說、作者姓名之外，後面還會有個括號寫著像是：(C</description>
    </item>
    
    <item>
      <title>各種符號的英文讀法</title>
      <link>https://blog.rex-tsou.com/2017/08/%E5%90%84%E7%A8%AE%E7%AC%A6%E8%99%9F%E7%9A%84%E8%8B%B1%E6%96%87%E8%AE%80%E6%B3%95/</link>
      <pubDate>Mon, 21 Aug 2017 11:59:09 +0800</pubDate>
      
      <guid>https://blog.rex-tsou.com/2017/08/%E5%90%84%E7%A8%AE%E7%AC%A6%E8%99%9F%E7%9A%84%E8%8B%B1%E6%96%87%E8%AE%80%E6%B3%95/</guid>
      <description>運算符號 Symbol Description 中文說法 + Plus, And 加號、正號 - Minus, Negative 減號、負號 * Times, Multiplied by 乘號 / Devided by 除號 % Percent 百分號 = Equals 等號 ( ) Open(close) parenthesis, Parentheses 小括號 [ ] Open(close) bracket, Square brackets 方括號 { } Open(close) brace, Open(close) curly, Curly</description>
    </item>
    
    <item>
      <title>利用 CSS 美化瀏覽器的 `console`</title>
      <link>https://blog.rex-tsou.com/2017/07/%E5%88%A9%E7%94%A8-css-%E7%BE%8E%E5%8C%96%E7%80%8F%E8%A6%BD%E5%99%A8%E7%9A%84-console/</link>
      <pubDate>Thu, 06 Jul 2017 10:34:09 +0800</pubDate>
      
      <guid>https://blog.rex-tsou.com/2017/07/%E5%88%A9%E7%94%A8-css-%E7%BE%8E%E5%8C%96%E7%80%8F%E8%A6%BD%E5%99%A8%E7%9A%84-console/</guid>
      <description>瀏覽器的console功能不少，除了最常用的log之外，還有代表不同狀態的： info warn error 也有不同功能的： time、timeEnd table dir group assert 本篇主要介</description>
    </item>
    
    <item>
      <title>執行 sh 遇到的編碼問題</title>
      <link>https://blog.rex-tsou.com/2017/06/%E5%9F%B7%E8%A1%8C-sh-%E9%81%87%E5%88%B0%E7%9A%84%E7%B7%A8%E7%A2%BC%E5%95%8F%E9%A1%8C/</link>
      <pubDate>Tue, 27 Jun 2017 14:21:00 +0800</pubDate>
      
      <guid>https://blog.rex-tsou.com/2017/06/%E5%9F%B7%E8%A1%8C-sh-%E9%81%87%E5%88%B0%E7%9A%84%E7%B7%A8%E7%A2%BC%E5%95%8F%E9%A1%8C/</guid>
      <description>遇到的錯誤 message 如下： env: node\r: No such file or directory 今天在 Linux 系統裡執行 .sh 時，遇到系統編碼格式不同所造成的問題 問題原因是因為 Windows 的結尾字符和 Linux 系統不一樣（Windo</description>
    </item>
    
    <item>
      <title>解決 Nginx 403 Forbidden</title>
      <link>https://blog.rex-tsou.com/2017/06/%E8%A7%A3%E6%B1%BA-nginx-403-forbidden/</link>
      <pubDate>Sun, 18 Jun 2017 17:46:00 +0000</pubDate>
      
      <guid>https://blog.rex-tsou.com/2017/06/%E8%A7%A3%E6%B1%BA-nginx-403-forbidden/</guid>
      <description>檢查 error log 確定檔案權限為 755 確定 SElinux ll -Z /etc/nginx/conf.d/xxx.conf # 顯示出 [身分識別:角色:type] 的SElinux 訊息，type 最重要，可能會是 &amp;quot;httpd_config_t&amp;quot; ll -Z /srv/www # type可能</description>
    </item>
    
    <item>
      <title>Hello World!</title>
      <link>https://blog.rex-tsou.com/2017/06/hello-world/</link>
      <pubDate>Mon, 05 Jun 2017 00:29:35 +0800</pubDate>
      
      <guid>https://blog.rex-tsou.com/2017/06/hello-world/</guid>
      <description>文字 粗體 斜體 引言引言引言引言引言 Lorem ipsum dolor sit amet, consectetur adipisicing elit. Quia eaque tenetur eos alias officiis animi. In amet doloremque, fugiat quasi, illo, similique veniam praesentium ipsa distinctio perspiciatis dignissimos! Consequatur, quia. 第二層引言 Lorem ipsum dolor sit amet, consectetur adipisicing elit. Incidunt error voluptate veniam mollitia, eos perferendis quibusdam officiis dolore at</description>
    </item>
    
    <item>
      <title>HTML select 的 placeholder 寫法</title>
      <link>https://blog.rex-tsou.com/2017/05/html-select-%E7%9A%84-placeholder-%E5%AF%AB%E6%B3%95/</link>
      <pubDate>Mon, 22 May 2017 07:17:00 +0000</pubDate>
      
      <guid>https://blog.rex-tsou.com/2017/05/html-select-%E7%9A%84-placeholder-%E5%AF%AB%E6%B3%95/</guid>
      <description>該如何讓select表單預設顯示在placeholder選項，但此選項僅作為提示用，不能選取呢？ 可以這樣寫： &amp;lt;select&amp;gt; &amp;lt;option value=&amp;quot;&amp;quot; disabled selected&amp;gt;</description>
    </item>
    
    <item>
      <title>分頁自動帶入 link-rel-prefetch function 試作</title>
      <link>https://blog.rex-tsou.com/2017/04/%E5%88%86%E9%A0%81%E8%87%AA%E5%8B%95%E5%B8%B6%E5%85%A5-link-rel-prefetch-function-%E8%A9%A6%E4%BD%9C/</link>
      <pubDate>Thu, 20 Apr 2017 07:34:00 +0000</pubDate>
      
      <guid>https://blog.rex-tsou.com/2017/04/%E5%88%86%E9%A0%81%E8%87%AA%E5%8B%95%E5%B8%B6%E5%85%A5-link-rel-prefetch-function-%E8%A9%A6%E4%BD%9C/</guid>
      <description>&amp;lt;nav class=&amp;quot;pages&amp;quot;&amp;gt; &amp;lt;ul class=&amp;quot;list&amp;quot;&amp;gt; &amp;lt;li class=&amp;quot;item&amp;quot;&amp;gt; &amp;lt;a class=&amp;quot;link&amp;quot; href=&amp;quot;/zh_TW&amp;quot;&amp;gt;首頁&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt; &amp;lt;li class=&amp;quot;item&amp;quot;&amp;gt; &amp;lt;a class=&amp;quot;link&amp;quot; href=&amp;qu</description>
    </item>
    
    <item>
      <title>CentOS 設定 Samba server，與 Windows 共享檔案</title>
      <link>https://blog.rex-tsou.com/2017/04/centos-%E8%A8%AD%E5%AE%9A-samba-server%E8%88%87-windows-%E5%85%B1%E4%BA%AB%E6%AA%94%E6%A1%88/</link>
      <pubDate>Wed, 12 Apr 2017 16:48:00 +0000</pubDate>
      
      <guid>https://blog.rex-tsou.com/2017/04/centos-%E8%A8%AD%E5%AE%9A-samba-server%E8%88%87-windows-%E5%85%B1%E4%BA%AB%E6%AA%94%E6%A1%88/</guid>
      <description>以 CentOS 當作測試環境 server 時，如果習慣的開發環境是 Windows，會需要在 CentOS 內安裝 Samba，才能順利與 Windows 分享檔案。 先簡述一下我目前的開發環境： 正式</description>
    </item>
    
    <item>
      <title>JavaScript 轉換型別小技巧</title>
      <link>https://blog.rex-tsou.com/2017/03/javascript-%E8%BD%89%E6%8F%9B%E5%9E%8B%E5%88%A5%E5%B0%8F%E6%8A%80%E5%B7%A7/</link>
      <pubDate>Mon, 06 Mar 2017 09:47:00 +0000</pubDate>
      
      <guid>https://blog.rex-tsou.com/2017/03/javascript-%E8%BD%89%E6%8F%9B%E5%9E%8B%E5%88%A5%E5%B0%8F%E6%8A%80%E5%B7%A7/</guid>
      <description>var number = 1; var string = &#39;1&#39;; var bool = true; string === number; // false bool === number; // false bool === string; // false string 與 number 轉換 string === &#39;&#39; + number; // true +string === number; // true boolean 與 number 轉換 +bool === number; // true bool === !!number // true boolean 與string 轉換 bool</description>
    </item>
    
    <item>
      <title>純 CSS 實現打字效果</title>
      <link>https://blog.rex-tsou.com/2017/02/%E7%B4%94-css-%E5%AF%A6%E7%8F%BE%E6%89%93%E5%AD%97%E6%95%88%E6%9E%9C/</link>
      <pubDate>Wed, 15 Feb 2017 02:22:00 +0000</pubDate>
      
      <guid>https://blog.rex-tsou.com/2017/02/%E7%B4%94-css-%E5%AF%A6%E7%8F%BE%E6%89%93%E5%AD%97%E6%95%88%E6%9E%9C/</guid>
      <description>剛剛看到這個搜尋樣式，覺得在搜尋前使用 #tag 的方式提醒使用者可用的關鍵字不錯，應該會適合小網站或部落格。 好奇就順便看了下程式碼，發現她的打字效果</description>
    </item>
    
    <item>
      <title>JavaScript 判斷小數是否相等</title>
      <link>https://blog.rex-tsou.com/2017/02/javascript-%E5%88%A4%E6%96%B7%E5%B0%8F%E6%95%B8%E6%98%AF%E5%90%A6%E7%9B%B8%E7%AD%89/</link>
      <pubDate>Wed, 08 Feb 2017 03:29:00 +0000</pubDate>
      
      <guid>https://blog.rex-tsou.com/2017/02/javascript-%E5%88%A4%E6%96%B7%E5%B0%8F%E6%95%B8%E6%98%AF%E5%90%A6%E7%9B%B8%E7%AD%89/</guid>
      <description>大家都知道，在 JavaScript 裡，0.1 + 0.2 !== 0.3，因為浮點數並不是精確值。 那麼需要比較小數的時候怎麼辦呢？只要定義好誤差範圍即可，依據 IEEE 754 的標準，64</description>
    </item>
    
    <item>
      <title>Cmder 相關配置與問題解決</title>
      <link>https://blog.rex-tsou.com/2017/01/cmder-%E7%9B%B8%E9%97%9C%E9%85%8D%E7%BD%AE%E8%88%87%E5%95%8F%E9%A1%8C%E8%A7%A3%E6%B1%BA/</link>
      <pubDate>Tue, 10 Jan 2017 04:05:00 +0000</pubDate>
      
      <guid>https://blog.rex-tsou.com/2017/01/cmder-%E7%9B%B8%E9%97%9C%E9%85%8D%E7%BD%AE%E8%88%87%E5%95%8F%E9%A1%8C%E8%A7%A3%E6%B1%BA/</guid>
      <description>目前版本 v1.3.2 下載位置： 官網 http://cmder.net/ GitHub Repo Releases 中文亂碼 修改 Settings/Startup/Environment (Win+Alt+P 可打開設定介面)， 在底下新增一行 set LANG=zh_TW.UTF8 啟動資料夾更改為所在位置(current directory) 修改 Settings/Startup/Tasks 內的 Task Commands</description>
    </item>
    
    <item>
      <title>FormData 基礎用法</title>
      <link>https://blog.rex-tsou.com/2017/01/formdata-%E5%9F%BA%E7%A4%8E%E7%94%A8%E6%B3%95/</link>
      <pubDate>Fri, 06 Jan 2017 02:53:00 +0000</pubDate>
      
      <guid>https://blog.rex-tsou.com/2017/01/formdata-%E5%9F%BA%E7%A4%8E%E7%94%A8%E6%B3%95/</guid>
      <description>創建 FormData 物件 // 語法： var formData = new FormData(form); // new 一個空的 FormData var formData = new FormData(); // 或者從現有的 form 取得資料，並 new FormData var formData = new FormData(document.querySelector(&#39;form&#39;)); 新增 (FormData.append) // 語法： formData.append(name, value[, filename]); // 新增一筆 username 資料，值為 Rex //</description>
    </item>
    
    <item>
      <title>用 POST 介接訂房系統 API 遇到的問題</title>
      <link>https://blog.rex-tsou.com/2016/12/%E7%94%A8-post-%E4%BB%8B%E6%8E%A5%E8%A8%82%E6%88%BF%E7%B3%BB%E7%B5%B1-api-%E9%81%87%E5%88%B0%E7%9A%84%E5%95%8F%E9%A1%8C/</link>
      <pubDate>Thu, 22 Dec 2016 08:02:00 +0000</pubDate>
      
      <guid>https://blog.rex-tsou.com/2016/12/%E7%94%A8-post-%E4%BB%8B%E6%8E%A5%E8%A8%82%E6%88%BF%E7%B3%BB%E7%B5%B1-api-%E9%81%87%E5%88%B0%E7%9A%84%E5%95%8F%E9%A1%8C/</guid>
      <description>最近製作某飯店集團網站，其中有個功能需要在網站內提供線上訂房的表單，當使用者選擇分館、入住日期、離開日期之後，按下快速訂房按鈕就直接查詢訂房</description>
    </item>
    
    <item>
      <title>CSS @font-face 用法概要</title>
      <link>https://blog.rex-tsou.com/2016/10/css-font-face-%E7%94%A8%E6%B3%95%E6%A6%82%E8%A6%81/</link>
      <pubDate>Fri, 21 Oct 2016 16:19:00 +0000</pubDate>
      
      <guid>https://blog.rex-tsou.com/2016/10/css-font-face-%E7%94%A8%E6%B3%95%E6%A6%82%E8%A6%81/</guid>
      <description>在CSS檔開頭用@font-face宣告你的自定義字型，詳細語法說明如下： font-family：定義字型名稱，可自行更改看自己喜歡 src：</description>
    </item>
    
    <item>
      <title>如何實作 addClass, removeClass？</title>
      <link>https://blog.rex-tsou.com/2016/10/%E5%A6%82%E4%BD%95%E5%AF%A6%E4%BD%9C-addclass-removeclass/</link>
      <pubDate>Mon, 10 Oct 2016 09:46:00 +0000</pubDate>
      
      <guid>https://blog.rex-tsou.com/2016/10/%E5%A6%82%E4%BD%95%E5%AF%A6%E4%BD%9C-addclass-removeclass/</guid>
      <description>以下原始碼與想法，參考自 Sitepoint：Add or Remove a CSS Class with Vanilla JavaScript 並作改寫，為了撰寫方便，使用 ES6 語法，如需支援古老瀏覽器，仍需經過 Babel 轉換。 如</description>
    </item>
    
    <item>
      <title>如何改變 Chrome for Android 的 toolbar 顏色？</title>
      <link>https://blog.rex-tsou.com/2016/10/%E5%A6%82%E4%BD%95%E6%94%B9%E8%AE%8A-chrome-for-android-%E7%9A%84-toolbar-%E9%A1%8F%E8%89%B2/</link>
      <pubDate>Tue, 04 Oct 2016 06:05:00 +0000</pubDate>
      
      <guid>https://blog.rex-tsou.com/2016/10/%E5%A6%82%E4%BD%95%E6%94%B9%E8%AE%8A-chrome-for-android-%E7%9A%84-toolbar-%E9%A1%8F%E8%89%B2/</guid>
      <description>超簡單，只要新增一個name=&amp;quot;theme-color&amp;quot;的meta標籤到&amp;lt;head&amp;gt;內即可，content 內</description>
    </item>
    
    <item>
      <title>chocolatey 指令備忘</title>
      <link>https://blog.rex-tsou.com/2016/09/chocolatey-%E6%8C%87%E4%BB%A4%E5%82%99%E5%BF%98/</link>
      <pubDate>Tue, 13 Sep 2016 09:42:00 +0000</pubDate>
      
      <guid>https://blog.rex-tsou.com/2016/09/chocolatey-%E6%8C%87%E4%BB%A4%E5%82%99%E5%BF%98/</guid>
      <description>搜尋／列出套件 choco search &amp;lt;filter&amp;gt; [&amp;lt;options&amp;gt;/&amp;lt;switches&amp;gt;] # 搜尋套件 choco list &amp;lt;filter&amp;gt; [&amp;lt;options&amp;gt;/&amp;lt;switches&amp;gt;] # 搜尋套件 clist &amp;lt;filter&amp;gt; [&amp;lt;options&amp;gt;/&amp;lt;switches&amp;gt;] # 可簡寫為 clist #-----基礎用法----- choco search git # 搜尋git choco list --local-only # 列出已安裝套件 choco</description>
    </item>
    
    <item>
      <title>SVN 常用指令備忘</title>
      <link>https://blog.rex-tsou.com/2016/09/svn-%E5%B8%B8%E7%94%A8%E6%8C%87%E4%BB%A4%E5%82%99%E5%BF%98/</link>
      <pubDate>Thu, 08 Sep 2016 09:21:00 +0000</pubDate>
      
      <guid>https://blog.rex-tsou.com/2016/09/svn-%E5%B8%B8%E7%94%A8%E6%8C%87%E4%BB%A4%E5%82%99%E5%BF%98/</guid>
      <description>svn 檔案狀態 ?: 此檔案不存在 svn 內 A: 此次新增的檔案 C: 此檔案無法成功合併 D: 此次移除的檔案 M: 此檔案有修改 U: 此檔案有更新 status 查看 local 檔案與 svn server 版本異同，可簡</description>
    </item>
    
    <item>
      <title>Command Line 資料重導向相關命令</title>
      <link>https://blog.rex-tsou.com/2016/07/command-line-%E8%B3%87%E6%96%99%E9%87%8D%E5%B0%8E%E5%90%91%E7%9B%B8%E9%97%9C%E5%91%BD%E4%BB%A4/</link>
      <pubDate>Wed, 27 Jul 2016 01:11:00 +0000</pubDate>
      
      <guid>https://blog.rex-tsou.com/2016/07/command-line-%E8%B3%87%E6%96%99%E9%87%8D%E5%B0%8E%E5%90%91%E7%9B%B8%E9%97%9C%E5%91%BD%E4%BB%A4/</guid>
      <description>stdin、stdout、stderr 0：stdin（Standard input）標準輸入 1：stdout（Standard output）標</description>
    </item>
    
    <item>
      <title>Chrome Devtools 事件偵測的幾個技巧</title>
      <link>https://blog.rex-tsou.com/2016/07/chrome-devtools-%E4%BA%8B%E4%BB%B6%E5%81%B5%E6%B8%AC%E7%9A%84%E5%B9%BE%E5%80%8B%E6%8A%80%E5%B7%A7/</link>
      <pubDate>Tue, 26 Jul 2016 14:56:00 +0000</pubDate>
      
      <guid>https://blog.rex-tsou.com/2016/07/chrome-devtools-%E4%BA%8B%E4%BB%B6%E5%81%B5%E6%B8%AC%E7%9A%84%E5%B9%BE%E5%80%8B%E6%8A%80%E5%B7%A7/</guid>
      <description>不得不說，Chrome 開發者工具愈來越好用了，除了一般常用的 HTML、CSS 編輯功能之外，最近也常利用 sources tab，直接在瀏覽器開啟 js 檔抓 bug 測試</description>
    </item>
    
    <item>
      <title>Wget 指令用途與範例</title>
      <link>https://blog.rex-tsou.com/2016/05/wget-%E6%8C%87%E4%BB%A4%E7%94%A8%E9%80%94%E8%88%87%E7%AF%84%E4%BE%8B/</link>
      <pubDate>Thu, 19 May 2016 07:46:00 +0000</pubDate>
      
      <guid>https://blog.rex-tsou.com/2016/05/wget-%E6%8C%87%E4%BB%A4%E7%94%A8%E9%80%94%E8%88%87%E7%AF%84%E4%BE%8B/</guid>
      <description>範例用法 #下載指定url wget http://sample.xxx/ #將指定url輸出為指定檔案 wget http://sample.xxx/sample.html -O test.html #下載全站 wget -r http://sample.xxx/ #下載全站（進階版） wget -t0 -c -nH -np -m -P /targetdir http://sample.xxx/ #確認bookmark</description>
    </item>
    
    <item>
      <title>HTML tag 速查表</title>
      <link>https://blog.rex-tsou.com/2016/05/html-tag-%E9%80%9F%E6%9F%A5%E8%A1%A8/</link>
      <pubDate>Thu, 19 May 2016 04:15:00 +0000</pubDate>
      
      <guid>https://blog.rex-tsou.com/2016/05/html-tag-%E9%80%9F%E6%9F%A5%E8%A1%A8/</guid>
      <description>Main Tag English 中文語義 !DOCTYPE document type 宣告文件類型 html html root HTML 根元素 !-- -- html comment HTML 注釋 Metadata Tag English 中文語義 head head HTML metadata title title HTML 標題 base base 定義相對 URL link link 外部匯入 JS 或 CSS meta meta 定義其他 metadata style</description>
    </item>
    
    <item>
      <title>contact 表單設計</title>
      <link>https://blog.rex-tsou.com/2016/05/contact-%E8%A1%A8%E5%96%AE%E8%A8%AD%E8%A8%88/</link>
      <pubDate>Mon, 09 May 2016 07:19:00 +0000</pubDate>
      
      <guid>https://blog.rex-tsou.com/2016/05/contact-%E8%A1%A8%E5%96%AE%E8%A8%AD%E8%A8%88/</guid>
      <description>上週逛 awwwards，看到這個網站的表單設計得不錯，手癢也來仿作了一個。 利用 Javascript，我在使用者輸入資料後（偵測到oninpu</description>
    </item>
    
    <item>
      <title>利用URL.createObjectURL方法，即時產生可下載檔案</title>
      <link>https://blog.rex-tsou.com/2016/04/%E5%88%A9%E7%94%A8url.createobjecturl%E6%96%B9%E6%B3%95%E5%8D%B3%E6%99%82%E7%94%A2%E7%94%9F%E5%8F%AF%E4%B8%8B%E8%BC%89%E6%AA%94%E6%A1%88/</link>
      <pubDate>Tue, 19 Apr 2016 06:36:00 +0000</pubDate>
      
      <guid>https://blog.rex-tsou.com/2016/04/%E5%88%A9%E7%94%A8url.createobjecturl%E6%96%B9%E6%B3%95%E5%8D%B3%E6%99%82%E7%94%A2%E7%94%9F%E5%8F%AF%E4%B8%8B%E8%BC%89%E6%AA%94%E6%A1%88/</guid>
      <description>最近在看 HTML5 的一些 API，發現有不少好用的功能，剛才看到黑暗執行緒這篇介紹，可以利用URL.createObjectURL，將物件內容暫時存在</description>
    </item>
    
    <item>
      <title>利用WAAPI(Web Animations API)製作動態效果</title>
      <link>https://blog.rex-tsou.com/2016/03/%E5%88%A9%E7%94%A8waapiweb-animations-api%E8%A3%BD%E4%BD%9C%E5%8B%95%E6%85%8B%E6%95%88%E6%9E%9C/</link>
      <pubDate>Thu, 24 Mar 2016 10:46:00 +0000</pubDate>
      
      <guid>https://blog.rex-tsou.com/2016/03/%E5%88%A9%E7%94%A8waapiweb-animations-api%E8%A3%BD%E4%BD%9C%E5%8B%95%E6%85%8B%E6%95%88%E6%9E%9C/</guid>
      <description>一般來說，網頁動畫常使用 Javascript、CSS、SVG 等方式製作，尤其近期 SVG 動畫有越來越流行的趨勢，這些方法都各有優缺，WAAPI則企</description>
    </item>
    
    <item>
      <title>利用 http-server 快速搭建一個 localhost 伺服器</title>
      <link>https://blog.rex-tsou.com/2016/03/%E5%88%A9%E7%94%A8-http-server-%E5%BF%AB%E9%80%9F%E6%90%AD%E5%BB%BA%E4%B8%80%E5%80%8B-localhost-%E4%BC%BA%E6%9C%8D%E5%99%A8/</link>
      <pubDate>Tue, 22 Mar 2016 14:20:00 +0000</pubDate>
      
      <guid>https://blog.rex-tsou.com/2016/03/%E5%88%A9%E7%94%A8-http-server-%E5%BF%AB%E9%80%9F%E6%90%AD%E5%BB%BA%E4%B8%80%E5%80%8B-localhost-%E4%BC%BA%E6%9C%8D%E5%99%A8/</guid>
      <description>搭建一個網站時，我們經常需要立即測試，方便修正與微調。但有些頁面因為安全性或是其他問題，必須要放上伺服器才能看到效果（比如 ajax，如果不是</description>
    </item>
    
    <item>
      <title>cURL指令備忘</title>
      <link>https://blog.rex-tsou.com/2016/03/curl%E6%8C%87%E4%BB%A4%E5%82%99%E5%BF%98/</link>
      <pubDate>Sun, 20 Mar 2016 15:59:00 +0000</pubDate>
      
      <guid>https://blog.rex-tsou.com/2016/03/curl%E6%8C%87%E4%BB%A4%E5%82%99%E5%BF%98/</guid>
      <description>一般用法 # 顯示網頁原始碼 curl http://sample.xxx/ # 將網頁內容輸出為sample.html curl -o sample.html http://sample.xxx/ # 同上，但輸出時維持原檔名 curl -O http://sample.xxx # 用來下載檔案也沒問題 curl -O http://sample.xxx/image/image001.jpg # 批</description>
    </item>
    
    <item>
      <title>Javascript 字串轉陣列</title>
      <link>https://blog.rex-tsou.com/2016/03/javascript-%E5%AD%97%E4%B8%B2%E8%BD%89%E9%99%A3%E5%88%97/</link>
      <pubDate>Tue, 15 Mar 2016 10:47:00 +0000</pubDate>
      
      <guid>https://blog.rex-tsou.com/2016/03/javascript-%E5%AD%97%E4%B8%B2%E8%BD%89%E9%99%A3%E5%88%97/</guid>
      <description>如果要將字串轉為陣列形式，可以利用 for 迴圈，配合 slice 切割字串 請看程式碼： 利用 for 迴圈 首先是每隔一個字元存入陣列： var x = &amp;quot;Hello world!&amp;quot;; var myArray = []; function foo(x) { for (var i = 0;</description>
    </item>
    
    <item>
      <title>一鍵看光網頁排版</title>
      <link>https://blog.rex-tsou.com/2016/03/%E4%B8%80%E9%8D%B5%E7%9C%8B%E5%85%89%E7%B6%B2%E9%A0%81%E6%8E%92%E7%89%88/</link>
      <pubDate>Wed, 09 Mar 2016 10:48:00 +0000</pubDate>
      
      <guid>https://blog.rex-tsou.com/2016/03/%E4%B8%80%E9%8D%B5%E7%9C%8B%E5%85%89%E7%B6%B2%E9%A0%81%E6%8E%92%E7%89%88/</guid>
      <description>在設計網頁時，我經常會在網路上參考各種排版，吸取大神們的經驗與靈感。 一開始我習慣直接用眼睛感受，觀察各元素的大小、距離…… 當能力進階之後，我</description>
    </item>
    
    <item>
      <title>瀑布流（masonry）圖片重疊問題</title>
      <link>https://blog.rex-tsou.com/2016/02/%E7%80%91%E5%B8%83%E6%B5%81masonry%E5%9C%96%E7%89%87%E9%87%8D%E7%96%8A%E5%95%8F%E9%A1%8C/</link>
      <pubDate>Mon, 22 Feb 2016 09:25:00 +0000</pubDate>
      
      <guid>https://blog.rex-tsou.com/2016/02/%E7%80%91%E5%B8%83%E6%B5%81masonry%E5%9C%96%E7%89%87%E9%87%8D%E7%96%8A%E5%95%8F%E9%A1%8C/</guid>
      <description>因為 pinterest 的緣故，有不少網站喜歡使用瀑布流排版，其中最簡單好用的套件莫過於 masonry 了。 然而在網頁載入時，圖片下載比較慢，若在整個網頁載入完成之前圖片還</description>
    </item>
    
    <item>
      <title>各種讓網頁重新導向的方法</title>
      <link>https://blog.rex-tsou.com/2016/01/%E5%90%84%E7%A8%AE%E8%AE%93%E7%B6%B2%E9%A0%81%E9%87%8D%E6%96%B0%E5%B0%8E%E5%90%91%E7%9A%84%E6%96%B9%E6%B3%95/</link>
      <pubDate>Fri, 08 Jan 2016 15:50:00 +0000</pubDate>
      
      <guid>https://blog.rex-tsou.com/2016/01/%E5%90%84%E7%A8%AE%E8%AE%93%E7%B6%B2%E9%A0%81%E9%87%8D%E6%96%B0%E5%B0%8E%E5%90%91%E7%9A%84%E6%96%B9%E6%B3%95/</guid>
      <description>方法一：直接在錯誤頁裡重導 如果沒有強迫症不在乎伺服器裡多增加一個沒有用的檔案，這樣最簡單： PHP &amp;lt;?php header( &#39;Location: http://www.redirect-location.com&#39; ); exit(); ?&amp;gt; HTML &amp;lt;meta http-equiv=&amp;quot;refresh&amp;quot; content=&amp;quot;1;url=http://www.redirect-location.com&amp;quot;&amp;gt; 此處content屬性裡面</description>
    </item>
    
    <item>
      <title>使用者等待時間與感受（行動版網頁）</title>
      <link>https://blog.rex-tsou.com/2015/11/%E4%BD%BF%E7%94%A8%E8%80%85%E7%AD%89%E5%BE%85%E6%99%82%E9%96%93%E8%88%87%E6%84%9F%E5%8F%97%E8%A1%8C%E5%8B%95%E7%89%88%E7%B6%B2%E9%A0%81/</link>
      <pubDate>Sat, 28 Nov 2015 15:29:00 +0000</pubDate>
      
      <guid>https://blog.rex-tsou.com/2015/11/%E4%BD%BF%E7%94%A8%E8%80%85%E7%AD%89%E5%BE%85%E6%99%82%E9%96%93%E8%88%87%E6%84%9F%E5%8F%97%E8%A1%8C%E5%8B%95%E7%89%88%E7%B6%B2%E9%A0%81/</guid>
      <description>等待時間 使用者感受 0.1秒 這樣的等待時間可以讓使用者覺得行動版網頁是瞬間載入完成，提供最完美的操作速度體驗，帶來美好的感受，但在大型系統當中</description>
    </item>
    
    <item>
      <title>前端工程八大流程</title>
      <link>https://blog.rex-tsou.com/2015/11/%E5%89%8D%E7%AB%AF%E5%B7%A5%E7%A8%8B%E5%85%AB%E5%A4%A7%E6%B5%81%E7%A8%8B/</link>
      <pubDate>Mon, 09 Nov 2015 15:47:00 +0000</pubDate>
      
      <guid>https://blog.rex-tsou.com/2015/11/%E5%89%8D%E7%AB%AF%E5%B7%A5%E7%A8%8B%E5%85%AB%E5%A4%A7%E6%B5%81%E7%A8%8B/</guid>
      <description>1. 開發主題與需求確認（Topic Confirmation） 了解網路服務想要帶給使用者的價值，設計時更能夠遵照同樣的價值進行。 2. 使用者經驗與流</description>
    </item>
    
    <item>
      <title>動態改變 CSS 樣式的 inline 寫法</title>
      <link>https://blog.rex-tsou.com/2015/10/%E5%8B%95%E6%85%8B%E6%94%B9%E8%AE%8A-css-%E6%A8%A3%E5%BC%8F%E7%9A%84-inline-%E5%AF%AB%E6%B3%95/</link>
      <pubDate>Tue, 20 Oct 2015 16:10:00 +0000</pubDate>
      
      <guid>https://blog.rex-tsou.com/2015/10/%E5%8B%95%E6%85%8B%E6%94%B9%E8%AE%8A-css-%E6%A8%A3%E5%BC%8F%E7%9A%84-inline-%E5%AF%AB%E6%B3%95/</guid>
      <description>某些 CSS 樣式無法使用 inline 寫法表示，必須要寫在&amp;lt;style&amp;gt;標籤裡面。比如說，我們想要改變某個連結的hover樣式，就只能去修改 sty</description>
    </item>
    
    <item>
      <title>在網頁中嵌入高亮程式碼</title>
      <link>https://blog.rex-tsou.com/2015/10/%E5%9C%A8%E7%B6%B2%E9%A0%81%E4%B8%AD%E5%B5%8C%E5%85%A5%E9%AB%98%E4%BA%AE%E7%A8%8B%E5%BC%8F%E7%A2%BC/</link>
      <pubDate>Tue, 13 Oct 2015 16:05:00 +0800</pubDate>
      
      <guid>https://blog.rex-tsou.com/2015/10/%E5%9C%A8%E7%B6%B2%E9%A0%81%E4%B8%AD%E5%B5%8C%E5%85%A5%E9%AB%98%E4%BA%AE%E7%A8%8B%E5%BC%8F%E7%A2%BC/</guid>
      <description>有時候，我們需要在頁面中分享程式碼，但可能會發現： 它居然被執行了！ 沒有 highlight 眼睛很痛…… 有 highlight，但是配色不好看 嵌入的方法有很多，以</description>
    </item>
    
  </channel>
</rss>